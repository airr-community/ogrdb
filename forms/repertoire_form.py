
# FlaskForm class definitions for PubId
# This file is automatically generated from the schema by schema/build_from_schema.py

from flask_wtf import FlaskForm
from flask_wtf.file import FileField
from custom_validators import *
from wtforms import StringField, SelectField, DateField, BooleanField, IntegerField, DecimalField, TextAreaField, validators
class PubIdForm(FlaskForm):
    pubmed_id = StringField('PubMed ID', [validators.Length(max=255)], description="PubMed ID (e.g. 26543)")



# FlaskForm class definitions for Acknowledgements
# This file is automatically generated from the schema by schema/build_from_schema.py

from flask_wtf import FlaskForm
from flask_wtf.file import FileField
from custom_validators import *
from wtforms import StringField, SelectField, DateField, BooleanField, IntegerField, DecimalField, TextAreaField, validators
class AcknowledgementsForm(FlaskForm):
    ack_name = StringField('Name', [validators.Length(max=255)], description="Name of individual to be acknowledged as contributing to this work")
    ack_institution_name = StringField('Institution', [validators.Length(max=255)], description="Individual's department and institution name")
    ack_ORCID_id = StringField('ORCID ID', [validators.Optional(), ValidOrcidID()], description="Individual's ORCID Id, if available")



# FlaskForm class definitions for Repertoire
# This file is automatically generated from the schema by schema/build_from_schema.py

from flask_wtf import FlaskForm
from flask_wtf.file import FileField
from custom_validators import *
from wtforms import StringField, SelectField, DateField, BooleanField, IntegerField, DecimalField, TextAreaField, validators
class RepertoireForm(FlaskForm):
    repository_name = StringField('Repository', [validators.Length(max=255), NonEmpty()], description="Name of the repository holding the sequence dataset (e.g. NIH SRA, or ENA)")
    rep_accession_no = StringField('Accession Number', [validators.Length(max=255), NonEmpty()], description="Accession number or serial number within the repository - NIH Project or ENA Study (e.g. SRP081761)")
    dataset_url = StringField('Dataset URL', [validators.Length(max=255), validators.URL()], description="URL of the study or project within the repository")
    miairr_compliant = SelectField('MiAIRR Compliant?', choices=[('Yes', 'Yes'), ('No', 'No')], description="Yes if the repertoire dataset and associated metadata is available in MiAIRR format")
    miairr_link = StringField('MiAIRR URL', [validators.Length(max=255), validators.Optional(), validators.URL()], description="Link to MiAIRR metadata, if available")
    sequencing_platform = StringField('Sequencing Platform', [validators.Length(max=255), NonEmpty()], description="Designation of sequencing instrument used")
    read_length = StringField('Read Length', [validators.Length(max=255), NonEmpty()], description="Read length in bases for each direction")
    primers_overlapping = SelectField('Primers Overlapping?', choices=[('Yes', 'Yes'), ('No', 'No')], description="Do primers overlap with the stated sequence of any inferred allele?")


