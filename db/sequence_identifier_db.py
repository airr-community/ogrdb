
# ORM definitions for SequenceIdentifier
# This file is automatically generated from the schema by schema/build_from_schema.py

from app import db
from db.userdb import User
from db.styled_table import *
from flask_table import Table, Col, LinkCol, create_table
from db.view_table import ViewCol
from sqlalchemy.orm import backref

class SequenceIdentifier(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    sequence = db.Column(db.String(1000))
    sequence_identifier = db.Column(db.String(1000))


def save_SequenceIdentifier(db, object, form, new=False):   
    object.sequence = form.sequence.data
    object.sequence_identifier = form.sequence_identifier.data

    if new:
        db.session.add(object)
        
    db.session.commit()   



def populate_SequenceIdentifier(db, object, form):   
    form.sequence.data = object.sequence
    form.sequence_identifier.data = object.sequence_identifier




def copy_SequenceIdentifier(c_from, c_to):   
    c_to.sequence = c_from.sequence
    c_to.sequence_identifier = c_from.sequence_identifier



class SequenceIdentifier_table(StyledTable):
    id = Col("id", show=False)


def make_SequenceIdentifier_table(results, private = False, classes=()):
    t = create_table(base=SequenceIdentifier_table)
    ret = t(results, classes=classes)
    return ret

class SequenceIdentifier_view(Table):
    item = ViewCol("", column_html_attrs={"class": "col-sm-3 text-right font-weight-bold view-table-row"})
    value = Col("")


def make_SequenceIdentifier_view(sub, private = False):
    ret = SequenceIdentifier_view([])
    ret.items.append({"item": "sequence", "value": sub.sequence, "field": "sequence"})
    ret.items.append({"item": "sequence_identifier", "value": sub.sequence_identifier, "field": "sequence_identifier"})
    return ret

