
# ORM definitions for RecordSet
# This file is automatically generated from the schema by schema/build_from_schema.py

from app import db
from db.userdb import User
from db.styled_table import *
from flask_table import Table, Col, LinkCol, create_table
from db.view_table import ViewCol
from sqlalchemy.orm import backref

class RecordSet(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    rec_accession_no = db.Column(db.String(1000))
    rec_record_title = db.Column(db.String(1000))
    rec_url = db.Column(db.String(1000))
    inferred_sequence_id = db.Column(db.Integer, db.ForeignKey('inferred_sequence.id'))
    inferred_sequence = db.relationship('InferredSequence', backref = 'record_set')
    genotype_description_id = db.Column(db.Integer, db.ForeignKey('genotype_description.id'))
    genotype_description = db.relationship('GenotypeDescription', backref = 'record_set')


def save_RecordSet(db, object, form, new=False):   
    object.rec_accession_no = form.rec_accession_no.data
    object.rec_record_title = form.rec_record_title.data
    object.rec_url = form.rec_url.data

    if new:
        db.session.add(object)
        
    db.session.commit()   



def populate_RecordSet(db, object, form):   
    form.rec_accession_no.data = object.rec_accession_no
    form.rec_record_title.data = object.rec_record_title
    form.rec_url.data = object.rec_url




def copy_RecordSet(c_from, c_to):   
    c_to.rec_accession_no = c_from.rec_accession_no
    c_to.rec_record_title = c_from.rec_record_title
    c_to.rec_url = c_from.rec_url



class RecordSet_table(StyledTable):
    id = Col("id", show=False)
    rec_accession_no = StyledCol("Accession Number", tooltip="Accession number of the record set within the repository (eg SRR7663069)")
    rec_record_title = StyledCol("Record Title", tooltip="Title of sequence record in the repository")


def make_RecordSet_table(results, private = False, classes=()):
    t = create_table(base=RecordSet_table)
    ret = t(results, classes=classes)
    return ret

class RecordSet_view(Table):
    item = ViewCol("", column_html_attrs={"class": "col-sm-3 text-right font-weight-bold view-table-row"})
    value = Col("")


def make_RecordSet_view(sub, private = False):
    ret = RecordSet_view([])
    ret.items.append({"item": "Accession Number", "value": sub.rec_accession_no, "tooltip": "Accession number of the record set within the repository (eg SRR7663069)", "field": "rec_accession_no"})
    ret.items.append({"item": "Record Title", "value": sub.rec_record_title, "tooltip": "Title of sequence record in the repository", "field": "rec_record_title"})
    ret.items.append({"item": "URL", "value": sub.rec_url, "tooltip": "URL to record in NCBI", "field": "rec_url"})
    return ret

