
# ORM definitions for PrimerSet
# This file is automatically generated from the schema by schema/build_from_schema.py

from app import db
from db.userdb import User
from db.styled_table import *
from flask_table import Table, Col, LinkCol, create_table
from db.view_table import ViewCol
from sqlalchemy.orm import backref

from db._primer_set_db import *

class PrimerSet(db.Model, PrimerSetMixin):
    id = db.Column(db.Integer, primary_key=True)
    primer_set_name = db.Column(db.String(1000))
    primer_set_notes = db.Column(db.Text())
    repertoire_id = db.Column(db.Integer, db.ForeignKey('repertoire.id'))
    repertoire = db.relationship('Repertoire', backref = 'primer_sets')


def save_PrimerSet(db, object, form, new=False):   

    if new:
        db.session.add(object)
        
    db.session.commit()   



def populate_PrimerSet(db, object, form):   
    form.primer_set_name.data = object.primer_set_name
    form.primer_set_notes.data = object.primer_set_notes




def copy_PrimerSet(c_from, c_to):   
    c_to.primer_set_name = c_from.primer_set_name
    c_to.primer_set_notes = c_from.primer_set_notes



class PrimerSet_table(StyledTable):
    id = Col("id", show=False)
    primer_set_name = StyledCol("Primer Set Name", tooltip="Primer Set name or quick description")


def make_PrimerSet_table(results, private = False, classes=()):
    t=create_table(base=PrimerSet_table)
    ret = t(results, classes=classes)
    return ret

class PrimerSet_view(Table):
    item = ViewCol("", column_html_attrs={"class": "col-sm-3 text-right font-weight-bold view-table-row"})
    value = Col("")


def make_PrimerSet_view(sub, private = False):
    ret = PrimerSet_view([])
    ret.items.append({"item": "Primer Set Name", "value": sub.primer_set_name, "tooltip": "Primer Set name or quick description", "field": "primer_set_name"})
    ret.items.append({"item": "Primer Set Notes", "value": sub.primer_set_notes, "tooltip": "Notes on Primer Set purpose/usage", "field": "primer_set_notes"})
    return ret

